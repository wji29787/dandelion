define(["./when-b43ff45e","./Check-d404a0fe","./Math-336da716","./Cartesian3-2b5b9afe","./Cartesian2-577f67dc","./Transforms-18f02e2b","./RuntimeError-bf10f3d5","./WebGLConstants-56de22c0","./ComponentDatatype-8956ad9a","./GeometryAttribute-5eb995bc","./JulianDate-53cdb307","./RequestType-beb1291d","./GeometryAttributes-fbf888b4","./IndexDatatype-c5295474","./IntersectionTests-8ff35218","./Plane-5b30f0ff","./arrayRemoveDuplicates-a7dee4b8","./BoundingRectangle-a11f7177","./EllipsoidTangentPlane-51ba1d6b","./EllipsoidRhumbLine-b4761ded","./PolygonPipeline-6cd12a44","./PolylineVolumeGeometryLibrary-8765c50e","./EllipsoidGeodesic-47c65dee","./PolylinePipeline-76ef9442"],function(d,e,a,u,c,y,i,n,f,h,t,r,g,m,o,l,s,p,b,v,E,P,_,C){"use strict";function k(e){var i=(e=d.defaultValue(e,d.defaultValue.EMPTY_OBJECT)).polylinePositions,n=e.shapePositions;this._positions=i,this._shape=n,this._ellipsoid=c.Ellipsoid.clone(d.defaultValue(e.ellipsoid,c.Ellipsoid.WGS84)),this._cornerType=d.defaultValue(e.cornerType,P.CornerType.ROUNDED),this._granularity=d.defaultValue(e.granularity,a.CesiumMath.RADIANS_PER_DEGREE),this._workerName="createPolylineVolumeOutlineGeometry";var t=1+i.length*u.Cartesian3.packedLength;t+=1+n.length*c.Cartesian2.packedLength,this.packedLength=t+c.Ellipsoid.packedLength+2}k.pack=function(e,i,n){var t;n=d.defaultValue(n,0);var a=e._positions,r=a.length;for(i[n++]=r,t=0;t<r;++t,n+=u.Cartesian3.packedLength)u.Cartesian3.pack(a[t],i,n);var o=e._shape,r=o.length;for(i[n++]=r,t=0;t<r;++t,n+=c.Cartesian2.packedLength)c.Cartesian2.pack(o[t],i,n);return c.Ellipsoid.pack(e._ellipsoid,i,n),n+=c.Ellipsoid.packedLength,i[n++]=e._cornerType,i[n]=e._granularity,i};var L=c.Ellipsoid.clone(c.Ellipsoid.UNIT_SPHERE),T={polylinePositions:void 0,shapePositions:void 0,ellipsoid:L,height:void 0,cornerType:void 0,granularity:void 0};k.unpack=function(e,i,n){i=d.defaultValue(i,0);for(var t=e[i++],a=new Array(t),r=0;r<t;++r,i+=u.Cartesian3.packedLength)a[r]=u.Cartesian3.unpack(e,i);t=e[i++];var o=new Array(t);for(r=0;r<t;++r,i+=c.Cartesian2.packedLength)o[r]=c.Cartesian2.unpack(e,i);var l=c.Ellipsoid.unpack(e,i,L);i+=c.Ellipsoid.packedLength;var s=e[i++],p=e[i];return d.defined(n)?(n._positions=a,n._shape=o,n._ellipsoid=c.Ellipsoid.clone(l,n._ellipsoid),n._cornerType=s,n._granularity=p,n):(T.polylinePositions=a,T.shapePositions=o,T.cornerType=s,T.granularity=p,new k(T))};var D=new p.BoundingRectangle;return k.createGeometry=function(e){var i=e._positions,n=s.arrayRemoveDuplicates(i,u.Cartesian3.equalsEpsilon),t=e._shape,t=P.PolylineVolumeGeometryLibrary.removeDuplicatesFromShape(t);if(!(n.length<2||t.length<3)){E.PolygonPipeline.computeWindingOrder2D(t)===E.WindingOrder.CLOCKWISE&&t.reverse();var a=p.BoundingRectangle.fromPoints(t,D);return function(e,i){var n=new g.GeometryAttributes;n.position=new h.GeometryAttribute({componentDatatype:f.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:e});var t=i.length,a=n.position.values.length/3,r=e.length/3/t,o=m.IndexDatatype.createTypedArray(a,2*t*(1+r)),l=0,s=0,p=s*t;for(c=0;c<t-1;c++)o[l++]=c+p,o[l++]=c+p+1;for(o[l++]=t-1+p,o[l++]=p,p=(s=r-1)*t,c=0;c<t-1;c++)o[l++]=c+p,o[l++]=c+p+1;for(o[l++]=t-1+p,o[l++]=p,s=0;s<r-1;s++)for(var d=t*s,u=d+t,c=0;c<t;c++)o[l++]=c+d,o[l++]=c+u;return new h.Geometry({attributes:n,indices:m.IndexDatatype.createTypedArray(a,o),boundingSphere:y.BoundingSphere.fromVertices(e),primitiveType:h.PrimitiveType.LINES})}(P.PolylineVolumeGeometryLibrary.computePositions(n,t,a,e,!1),t)}},function(e,i){return d.defined(i)&&(e=k.unpack(e,i)),e._ellipsoid=c.Ellipsoid.clone(e._ellipsoid),k.createGeometry(e)}});
